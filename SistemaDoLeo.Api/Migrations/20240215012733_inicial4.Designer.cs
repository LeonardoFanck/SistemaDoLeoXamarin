// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using XamarinAPI.DB;

#nullable disable

namespace XamarinAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240215012733_inicial4")]
    partial class inicial4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SistemaDoLeo.Modelos.Classes.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Inativo")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("SistemaDoLeo.Modelos.Classes.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DtNasc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Inativo")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TipoCliente")
                        .HasColumnType("bit");

                    b.Property<bool>("TipoForncedor")
                        .HasColumnType("bit");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("SistemaDoLeo.Modelos.Classes.FormaPgto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Inativo")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FormaPgtos");
                });

            modelBuilder.Entity("SistemaDoLeo.Modelos.Classes.Operador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Admin")
                        .HasColumnType("bit");

                    b.Property<bool>("Inativo")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Operadores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Admin = true,
                            Inativo = false,
                            Nome = "Operador Padrão - Administrador",
                            Senha = "5555"
                        });
                });

            modelBuilder.Entity("SistemaDoLeo.Modelos.Classes.OperadorTela", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<bool>("Editar")
                        .HasColumnType("bit");

                    b.Property<bool>("Excluir")
                        .HasColumnType("bit");

                    b.Property<bool>("Novo")
                        .HasColumnType("bit");

                    b.Property<int>("OperadorId")
                        .HasColumnType("int");

                    b.Property<int>("TelaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("OperadorTelas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativo = true,
                            Editar = true,
                            Excluir = true,
                            Novo = true,
                            OperadorId = 1,
                            TelaId = 1
                        },
                        new
                        {
                            Id = 2,
                            Ativo = true,
                            Editar = true,
                            Excluir = true,
                            Novo = true,
                            OperadorId = 1,
                            TelaId = 2
                        },
                        new
                        {
                            Id = 3,
                            Ativo = true,
                            Editar = true,
                            Excluir = true,
                            Novo = true,
                            OperadorId = 1,
                            TelaId = 3
                        },
                        new
                        {
                            Id = 4,
                            Ativo = true,
                            Editar = true,
                            Excluir = true,
                            Novo = true,
                            OperadorId = 1,
                            TelaId = 4
                        },
                        new
                        {
                            Id = 5,
                            Ativo = true,
                            Editar = true,
                            Excluir = true,
                            Novo = true,
                            OperadorId = 1,
                            TelaId = 5
                        },
                        new
                        {
                            Id = 6,
                            Ativo = true,
                            Editar = true,
                            Excluir = true,
                            Novo = true,
                            OperadorId = 1,
                            TelaId = 6
                        });
                });

            modelBuilder.Entity("SistemaDoLeo.Modelos.Classes.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Desconto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("FormaPgtoId")
                        .HasColumnType("int");

                    b.Property<string>("TipoOperacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("SistemaDoLeo.Modelos.Classes.PedidoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Desconto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("PedidoItens");
                });

            modelBuilder.Entity("SistemaDoLeo.Modelos.Classes.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<decimal>("Custo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("Estoque")
                        .HasColumnType("bigint");

                    b.Property<bool>("Inativo")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Unidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("SistemaDoLeo.Modelos.Classes.ProximoRegistro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Categoria")
                        .HasColumnType("int");

                    b.Property<int>("Cliente")
                        .HasColumnType("int");

                    b.Property<int>("FormaPgto")
                        .HasColumnType("int");

                    b.Property<int>("Operador")
                        .HasColumnType("int");

                    b.Property<int>("Pedido")
                        .HasColumnType("int");

                    b.Property<int>("Produto")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProximoRegistros");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Categoria = 0,
                            Cliente = 0,
                            FormaPgto = 0,
                            Operador = 1,
                            Pedido = 0,
                            Produto = 0
                        });
                });

            modelBuilder.Entity("SistemaDoLeo.Modelos.Classes.Tela", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Telas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Operador"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Categoria"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Cliente"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Forma Pagamento"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Pedido"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Produto"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
